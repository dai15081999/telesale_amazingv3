image: docker:20.10.16

variables:
  DOCKER_HOST: tcp://docker:2375
  DOCKER_TLS_CERTDIR: ""
  DOCKER_DRIVER: overlay2
  CI_DOCKER_IMAGE: ${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHA}
  CI_DOCKER_TAG: ${CI_REGISTRY_IMAGE}:${CI_COMMIT_TAG}
  CI_DOCKER_BRANCH: ${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_NAME}
  CI_DOCKER_LATEST: ${CI_REGISTRY_IMAGE}:latest
  SERVER_IP: 89.40.6.38

services:
  - docker:20.10.16-dind

stages:
  - docker-build
  - deploy

before_script:
  - docker info
  - echo ${CI_REGISTRY_PASSWORD} | docker login ${CI_REGISTRY} --username ${CI_REGISTRY_USER} --password-stdin

docker-build:
  stage: docker-build
  # Run this job in a branch where a Dockerfile exists
  rules:
    - if: $CI_COMMIT_BRANCH
      exists:
        - Dockerfile
    - if: '$CI_COMMIT_REF_NAME == "main"'
    - when: manual
  script:
    - docker build --pull -t ${CI_DOCKER_IMAGE} .
    - docker push ${CI_DOCKER_IMAGE}
    - docker tag ${CI_DOCKER_IMAGE} ${CI_DOCKER_LATEST}
    - docker push ${CI_DOCKER_LATEST}

deploy:
  environment: production
  stage: deploy
  before_script:        
  - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client git -y )'
  - eval $(ssh-agent -s)
  - echo "$SSH_PRIVATE_KEY"
  - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -  
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh
  - ssh-keyscan gitlab.com >> ~/.ssh/known_hosts
  - chmod 644 ~/.ssh/known_hosts

  script:
    - ssh -oStrictHostKeyChecking=no ${SERVER_IP} sudo echo ${CI_REGISTRY_PASSWORD} | docker login ${CI_REGISTRY} --username ${CI_REGISTRY_USER} --password-stdin
    - ssh -oStrictHostKeyChecking=no ${SERVER_IP} sudo docker stop telesys-bookcar || true
    - ssh -oStrictHostKeyChecking=no ${SERVER_IP} sudo docker container prune -f
    - ssh -oStrictHostKeyChecking=no ${SERVER_IP} sudo docker run -p 3001:80 -d --name telesys-bookcar ${CI_DOCKER_LATEST}
  artifacts:
    untracked: false
    when: on_success
    expire_in: 30 days
    paths:
      - public
  rules:
    - if: $CI_COMMIT_REF_NAME == "main"
         
